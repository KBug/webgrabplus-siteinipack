**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: play.telia.lt
* @MinSWversion: V5.0
* @Revision 4  - [10/12/2024] Blackbear199
*   - site changes
* @Revision 3  - [03/01/2024] Blackbear199
*   - add showicon
* @Revision 2  - [26/12/2023] Blackbear199
*   - showsplit fix
*   - title/titleoriginal/subtitle improvements
* @Revision 1  - [09/11/2023] Blackbear199
*   - use users local timezone
* @Revision 0  - [16/10/2022] Mat8861
*   - creation
* @Remarks: use users local timezone for timezone= setting on site {xx} line.
* Go3 Sports channel not present in channel list data
*<channel update="i" site="play.telia.lt" site_id="10076" xmltv_id="Go3 Sport 1 HD">Go3 Sport 1 HD</channel>
*<channel update="i" site="play.telia.lt" site_id="11400" xmltv_id="Go3 Sport 2 HD">Go3 Sport 2 HD</channel>
* @header_end
**------------------------------------------------------------------------------------------------
site {url=play.telia.lt|timezone=America/Halifax|maxdays=7|cultureinfo=lt-LT|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {ratingsystem=LFC|episodesystem=onscreen}
*Europe/Vilnius
scope.range {(urlindex)|end}
url_index {url|https://play.telia.lt/api/content/fetch}
url_index.headers {method=POST_BACK(POST,POST)}
url_index.headers {contenttype=application/json}
url_index.headers {postdata={"smartRequest":{"order":2,"dir":0,"limit":100,"enterprise":false,"currentLanguage":"LT","remoteType":"MRCU","accessType":"ANY_TELIA","android":false,"contentFilters":[{"type":"vod","favOnly":true},{"type":"epg","favOnly":true}]},"imageSizes":["Default","SmallLandscape","LargeLandscape","MediumLandscape","Landscape1080p","Landscape2160p","SmallPortrait","MediumPortrait","LargePortrait"]}|=["Default","SmallLandscape","LargeLandscape","MediumLandscape","Landscape1080p","Landscape2160p","SmallPortrait","MediumPortrait","LargePortrait"]}
url_index.headers {customheader=Origin=https://play.telia.lt}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
end_scope
*
scope.range {(postback)|end}
global_temp_9.modify {calculate(format=date,zzz)|'now'}
global_temp_9.modify {cleanup(style=urlencode)}
url_index.modify {set|https://play.telia.lt/api/epg/guide?channelId='channel'&dateFrom='urldate'T00%3A00%3A00'global_temp_9'&dateTo='urldate'T23%3A59%3A59'global_temp_9'}
end_scope
**
urldate.format {datestring|yyyy-MM-dd}
*
index_showsplit.scrub {multi|{"imageSources":|||}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
*
index_start.scrub {single|"progStart":"||"|"}
*index_stop.scrub {single|"progEnd":"||"|"} *conflicting times
index_title.scrub {single(separator=": "" (" include=first)|"title":"||",|",}
index_episode.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"season":([1-9]\d*)||}
index_showicon.scrub {url|https://play.telia.lt/api/images?|{"default":"||"|"}
index_temp_1.scrub {regex||"episode":([1-9]\d*)||}
index_temp_2.scrub {single|"id":||,|,}
*
index_episode.modify {addstart(not "")|S}
index_episode.modify {addend('index_temp_1' not "")|E'index_temp_1'}
*
index_urlshow.modify {addstart|https://play.telia.lt/api/epg/'index_temp_2'/details}
index_urlshow.headers {method=POST}
index_urlshow.headers {postdata={"imageSizes":["Default","SmallLandscape","LargeLandscape","MediumLandscape","Landscape1080p","Landscape2160p","SmallPortrait","MediumPortrait","LargePortrait"]}}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
titleoriginal.scrub {single|"titleOriginal":"||",|",}
subtitle.scrub {single(separator=": " include=last)|"titleWithEpTitle":"||",|",}
description.scrub {single|"description":"||","|","}
director.scrub {regex||"description":"(?:.*?)(?:Re≈æisierius:(.*?))(?:<br\|",)||}
actor.scrub {single(separator=", " max=12)|"description":"|Vaidina: |",|",}
rating.scrub {single|"ageRating":"||",|",}
category.scrub {single(separator=",")|"mainGenre":"||",|",}
productiondate.scrub {regex||"prodYear":(\d{4}),||}
country.scrub {single(separator=",")|"country":"||",|",}
showicon.scrub {single|"imageName":"||"|"}
*
subtitle.modify {cleanup(style=jsondecode)}
titleoriginal.modify {cleanup(style=jsondecode)}
description.modify {cleanup(style=jsondecode)}
director.modify {cleanup(style=jsondecode)}
director.modify {replace|,|\|}
actor.modify {cleanup(style=jsondecode)}
title.modify {addstart|'index_title'}
subtitle.modify {clear('title')}
subtitle.modify {clear("-")}
titleoriginal.modify {clear('title')}
titleoriginal.modify {set(not "")|('titleoriginal')}
titleoriginal.modify {addend(not "")|(lang=en)}
description.modify {remove(type=regex)|"(<br\/><br\/>.*?)$"}
description.modify {cleanup(tags="<"">")} 
description.modify {replace|Vaidina: | Vaidina: }
actor.modify {remove|\\t}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*scope.range {(urlindex)|end}
*url_index {url|https://play.telia.lt/api/content/fetch}
*url_index.headers {method=POST_BACK(POST,POST)}
*url_index.headers {contenttype=application/json}
*url_index.headers {postdata={"smartRequest":{"order":2,"dir":0,"limit":100,"enterprise":false,"currentLanguage":"LT","remoteType":"MRCU","accessType":"ANY_TELIA","android":false,"contentFilters":[{"type":"vod","favOnly":true},{"type":"epg","favOnly":true}]},"imageSizes":["Default","SmallLandscape","LargeLandscape","MediumLandscape","Landscape1080p","Landscape2160p","SmallPortrait","MediumPortrait","LargePortrait"]}|=["Default","SmallLandscape","LargeLandscape","MediumLandscape","Landscape1080p","Landscape2160p","SmallPortrait","MediumPortrait","LargePortrait"]}
*url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*end_scope
*scope.range {(postback)|end}
*url_index.modify {set|https://play.telia.lt/api/channel/all-channels-v2?showDeniedChannels=true}
*end_scope
*index_site_id.scrub {multi|"chId":||,|,}
*index_site_channel.scrub {multi|"chanName":"||",|",}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
