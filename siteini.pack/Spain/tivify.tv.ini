**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tivify.tv
* @MinSWversion: V5.0
* @Revision 5  - [24/01/2025] Blackbear199
*   - showsplit fix
*   - showicon fix
* @Revision 4  - [10/12/2023] Blackbear199
*   - description fix
*   - faster showsplit
*   - increase maxdays to 7
* @Revision 3  - [09/12/2023] Blackbear199
*   - disable stop scrub(sometimes incorrect)
*   - episode number improvements
*   - reduce maxdays to 4 to make grab time reasonable
* @Revision 2  - [06/12/2023] Blackbear199
*   - showsplit fix(again)
* @Revision 1  - [02/12/2023] Blackbear199
*   - showsplit fix
* @Revision 0  - [25/07/2023] Mat8861
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tivify.tv|timezone=UTC|maxdays=7|cultureinfo=es-SP|charset=UTF-8|titlematchfactor=90|keepindexpage}
site {episodesystem=onscreen}
*
url_index {url|https://mediasync.tvup.cloud/media/carrier/5ea94948bf8cbb0072c89fa6/epg/|urldate|.json}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {datestring|yyyy/M/d}

index_variable_element.modify{set|'config_site_id'}
index_urlchannellogo.scrub{regex||^.*?"channel":"([^"]*)","channelCode":"[^"]*","channelName":"'index_variable_element'",||}
index_urlchannellogo.modify {set(not "")|https://media.tvup.cloud/canales/color_lg_'index_urlchannellogo'.png}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {multi(includeblock=""channelName":"'index_variable_element'"")|{"_id":|||} *slow but works
index_showsplit.modify{replace(type=regex)|"\s*\!\?\?\!\s*"| }
index_showsplit.modify {replace|\\n| }
index_showsplit.modify {cleanup(style=jsondecode)}
index_temp_9.modify {substring(type=regex)|'index_showsplit' "\"beginTime\":\"([^\"]*)"} 
index_temp_9.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit" separator="." include=first)|"beginTime":"||"|"}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single(separator="." include=first)|"beginTime":"||"|"}
*index_stop.scrub {single(separator="." include=first)|"endTime":"||"|"} *conflicting times
index_title.scrub {single|"title":"||","|","} 
index_subtitle.scrub {single|"episodeTitle":"||","|","}
*index_titleoriginal.scrub {single|"originalTitle":"||",|",}
index_description.scrub {single|"synopsisLong":"||","|","}
index_productiondate.scrub {regex||"year":(\d{4})||}
index_director.scrub {single(separator="","" max=2)|"directors":["||"]|"]}
index_actor.scrub {single(separator="","")|"actors":["||"]|"]}
index_writer.scrub {single(separator="","" max=2)|"writers":["||"]|"]}
index_producer.scrub {single(separator="","" max=2)|"productors":["||"]|"]}
index_presenter.scrub {single(separator="","")|"hosts":["||"]|"]}
index_country.scrub {single(separator="","")|"country":["||"]|"]}
index_episode.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"season":(\d+)||}
index_rating.scrub {single|"ageCode":"||",|",}
index_premiere.scrub {regex||"premiereTVup":(true)||}
index_showicon.scrub {single|"moviePictures":{"background":"||",|",}
index_temp_1.scrub {single|"synopsis":"||","|","}
index_temp_2.scrub {single|"synopsisEpisode":"||","|","}
index_temp_3.scrub {regex||"episode":(\d+)||}
*
scope.range {(indexshowdetails)|end}
index_temp_4.modify {substring(type=regex)|'index_subtitle' "(?:\s*T\d+\s*)?\s*Capítulo\s*\d+"}
index_subtitle.modify {remove('index_temp_4' not "")|'index_temp_4'}
index_subtitle.modify {cleanup(style=name)}
index_subtitle.modify {clear('index_title')}
index_titleoriginal.modify {clear('index_title')}
index_titleoriginal.modify {addend(not "")|(lang=en)}
loop {(['index_description' ""] ['index_temp_1' not ""] &)|1}
index_description.modify {set|'index_temp_1'}
loop {(['index_description' ""] ['index_temp_1' ""] & ['index_temp_2' not ""] &)|1}
index_description.modify {set|'index_temp_2'}
index_description.modify {cleanup(tags="<"">")}
index_showicon.modify {remove(type=regex)|"\?width.*?$"}
index_showicon.modify {addstart(['index_showicon' not ""] ['index_showicon' not~ "https"] &)|https://media.tvup.cloud}
index_episode.modify {clear(> "1000")}
index_episode.modify {addstart(not "")|S}
index_episode.modify {addend('index_temp_3' not "")|E'index_temp_3'}
index_temp_4.modify {replace|T|S}
index_temp_4.modify {replace|Capítulo|E}
index_episode.modify {set('index_temp_4' not "")|'index_temp_4'}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**

** @auto_xml_channel_start
*
*url_index {url|https://mediasync.tvup.cloud/media/carrier/5ea94948bf8cbb0072c89fa6/channels.json}
*index_site_id.scrub{regex||"channelCode":"([^"]*)","(?:master\|dial\|created)"||}
*index_site_channel.scrub {regex||"title":"(.*?)","(?:type\|category\|name\|scope\|logo_size\|dial)":||}
*index_site_channel.modify {replace(type=regex)|"\!\?\?\!"|-}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
