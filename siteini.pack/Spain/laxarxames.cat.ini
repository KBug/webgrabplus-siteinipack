**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: laxarxames.cat
* @MinSWversion: V5.0
* @Revision 0 - [30/11/2024] Blackbear199
*   creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=laxarxames.cat|timezone=UTC|maxdays=3|cultureinfo=es-ES|charset=UTF-8|titlematchfactor=90|keepindexpage}
site {ratingsystem=ES|episodesystem=onscreen}
*
scope.range {(urlindex)|end}
url_index {url|https://api.laxarxames.cat/Authorization/SignIn}
url_index.headers {method=POST_BACK(POST,POST)}
url_index.headers {contenttype=application/json; charset=UTF-8}
url_index.headers {postdata={"Device":{"PlatformCode":"WEB","Name":"Windows (81f5c9a8-89a2-41b6-a063-38564ef3df49)"}}|={"MediaListId":181,"Type":"EPG","IncludeCategories":false,"IncludeImages":true,"IncludeMedia":true,"PageNumber":1,"PageSize":100,"MediaOptions":{"DateFrom":"'urldate'T00:00:00'global_temp_8'","DayTime":"ALL_DAY"}}}
url_index.headers {customheader=origin=https://laxarxames.cat}
url_index.headers {customheader=x-tenantorigin=https://laxarxames.cat}
url_index.headers {customheader=authorization=Bearer 'global_temp_9'}
url_index.headers {customheader=accept-encoding=gzip,deflate,br}
*
global_temp_9.scrub {single|"Token":"||"|"}
global_temp_8.modify {calculate(format=date,zzz)|'now'}
global_temp_7.modify {set|'config_site_id'}
end_scope
*
scope.range {(postback)|end}
url_index.modify {set|https://api.laxarxames.cat/Media/GetMediaList}
end_scope
*
urldate.format {datestring|yyyy-MM-dd}
*
index_urlchannellogo.scrub {single|{"Id":'global_temp_7',"MediaTypeCode":"CHANNEL"|"Url":"|"|}]}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {regex||\{"Id":'global_temp_7',"MediaTypeCode":"CHANNEL",(?:.*?)(?:"Media":\[(.*?)\],"ExternalId")||}
index_showsplit.modify {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify {replace(type=regex)|"\}(,)\{\"Id\":\d+,\"MediaTypeCode\":\"PROGRAM\""|\|}
index_showsplit.modify {cleanup(removeduplicates)}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit" separator="." include=first)|"StartDateTime":"||"|"}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single(separator="." include=first)|"StartDateTime":"||"|"}
index_stop.scrub {single(separator="." include=first)|"EndDateTime":"||"|"}
index_title.scrub {single|"Title":"||",|",}
index_showicon.scrub {single|"Images":[|"FRAME","Url":"|"|]}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {regex||\{"Id":(\d+),"MediaTypeCode":"CHANNEL","Title":"[^\"]*",||}
*index_site_channel.scrub {regex||\{"Id":\d+,"MediaTypeCode":"CHANNEL","Title":"([^\"]*)",||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
