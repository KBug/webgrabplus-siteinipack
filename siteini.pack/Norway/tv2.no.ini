﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv2.no
* @MinSWversion: V5.0
* @Revision 2 - [08/01/2025] Blackbear199
*  - site changes
* @Revision 1 - [18/01/2021] Blackbear199
*  - showsplit fix
* @Revision 0 - [17/07/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tv2.no|timezone=Europe/Oslo|maxdays=7|cultureinfo=nn-NO|charset=UTF-8|titlematchfactor=90|keepindexpage|allowlastdayoverflow}
site {ratingsystem=NO|episodesystem=onscreen}
*
url_index{url|https://tv2no-epg-api.public.tv2.no/epg/days/|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {datestring|yyyy/MM/dd}
*
scope.range {(datelogo)|end}
index_urlchannellogo.modify {set|'config_site_id'}
index_urlchannellogo.modify {cleanup(style=lower)}
index_urlchannellogo.modify {set|https://www.tv2.no/tvguide/assets/logos/'index_urlchannellogo'.svg}
end_scope
*
global_temp_1.modify {set|'config_site_id'}
scope.range {(splitindex)|end}
index_showsplit.scrub {multi|{"id":"'global_temp_1'","displayName"|"programs":[|],"created"|],"created"}
index_showsplit.modify {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify {replace|\},\{"id"|\}\|\{"id"}
index_temp_9.modify {substring(type=regex)|'index_showsplit' "\"startTime\":\"([^\"]*)"}
index_temp_9.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"startTime":"||"|"}
index_stop.scrub {single|"endTime":"||"|"}
index_title.scrub {single|"title":"||",|",}
index_description.scrub {single|"synopsis":"||",|",}
index_description.scrub {single|"seasonSynopsis":"||",|",}
index_category.scrub {single|"genre":"||",|",}
index_productiondate.scrub {single|"productionYear":||,|,}
index_country.scrub {single(separator="","")|"countryOfOrigin":["||"]|"]}
index_rating.scrub {single|"ageRating":||,|,}
index_episode.scrub {regex(pattern="S'S1' E'E1'/'Et1'""S'S1' E'E1'""E'E1'/'Et1'""E'E1'""S'S1'")||"episodeNumber":([1-9]\d*)||}
index_previousshown.scrub {regex||"replay":(true),||}
index_temp_1.scrub {regex||"episodeCount":([1-9]\d*)||}
index_temp_2.scrub {regex||"seasonNumber":([1-9]\d*)||}
index_temp_3.scrub {regex||"live":(true),||}
*
index_title.modify {addstart('index_temp_3' not "")|Direkte: }
index_temp_1.modify {clear(['index_episode' not ""] ['index_temp_1' not ""] & ['index_temp_1' > 'index_episode'] &)}
index_temp_2.modify {clear(> "1000")}
index_episode.modify {addstart(not "")|E}
index_episode.modify {addend('index_temp_1' not "")|/'index_temp_1'}
index_episode.modify {addstart('index_temp_2' not "")|S'index_temp_2' }
*
index_category.modify {cleanup(style=name)}
index_rating.modify {replace(type=regex)|"^0$"|}
index_rating.modify {replace(type=regex)|"^1$"|Alle}
index_rating.modify {replace(type=regex)|"^2$"|6 år}
index_rating.modify {replace(type=regex)|"^3$"|9 år}
index_rating.modify {replace(type=regex)|"^4$"|12 år}
index_rating.modify {replace(type=regex)|"^5$"|15 år}
index_rating.modify {replace(type=regex)|"^6$"|18 år}
index_rating.modify {replace(type=regex)|"^\d*$"|}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {regex||\{"id":"([^"]*)","displayName":"[^"]*",||}
*index_site_channel.scrub {regex||\{"id":"[^\"]*","displayName":"([^"]*)",||}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
