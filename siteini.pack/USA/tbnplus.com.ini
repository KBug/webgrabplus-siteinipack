﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tbnplus.com
* @MinSWversion: V5.0
* @Revision 0 - [04/02/2025] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tbnplus.com|timezone=UTC|maxdays=7.1|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=TV Parental Guidelines|episodesystem=onscreen}
*
scope.range {(urlindex)|end}
url_index {url|https://cdn.jwplayer.com/v2/playlists/wUwJ86KF?page_limit=100&page_offset=1}
url_index.headers {method=POST_BACK(GET,GET)}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
global_temp_1.modify {calculate(format=date,unix)|'now'}
global_temp_2.modify {calculate(format=date,unix)|'global_temp_1' 7:0:0 +}
global_temp_3.modify {set|'config_site_id'}
end_scope
*
scope.range {(postback)|end}
global_temp_9.scrub {multi|"playlist":[||],"feed_instance_id"|],"feed_instance_id"}
global_temp_9.modify {replace|\},\{"title"|\}\|\{"title"}
global_temp_9.modify {select(type=element)|"\"mediaid\":\"'global_temp_3'\"" ~~}
global_temp_9.modify {substring(type=regex)|"\"EPGLink\":\"([^\"]*)"}
global_temp_8.modify {set('global_temp_3' "fCGf6ROk")|TBN}
global_temp_8.modify {set('global_temp_3' "yfFI83Xz")|Inspire}
global_temp_8.modify {set('global_temp_3' "r08fY89I")|TBN-UK}
global_temp_8.modify {set('global_temp_3' "Q2Yar6Fo")|Enlace}
global_temp_8.modify {set('global_temp_3' "OSANTCwg")|TBN-Africa}
global_temp_8.modify {set('global_temp_3' "o7ASZw0O")|EJTV}
global_temp_8.modify {set('global_temp_3' "vh5CZx9y")|Al-Horreya}
global_temp_8.modify {set('global_temp_3' "tnBb1riP")|Nejat}
global_temp_8.modify {set('global_temp_3' "NXTAdMkM")|TCI}
global_temp_7.modify {set('global_temp_8' "")|'global_temp_9'}
global_temp_7.modify {set('global_temp_8' not "")|https://guide.tbncloud.org/lookup?network='global_temp_8'&start='global_temp_1'&end='global_temp_2'}
url_index.modify {set|'global_temp_7'}
end_scope
*
urldate.format {daycounter|0}
*
index_urlchannellogo.modify {set|https://cdn.jwplayer.com/v2/media/'global_temp_3'/poster.jpg}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {regex||(<programme.*?</programme>)\|\[(\{.*?\})\]||}
index_showsplit.modify {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify {replace|\},\{|\}\|\{}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*
global_temp_1.modify {calculate(format=date,yyyy-MM-ddTHH:mm:ss)|'global_temp_1'}
global_temp_2.modify {calculate(format=date,yyyy-MM-ddTHH:mm:ss)|'global_temp_2'}
index_showsplit.modify {set("")|{"start_time":"'global_temp_1'Z","end_time":"'global_temp_2'Z","title":"'config_display_name'"}}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {regex||"start_time":"(.*?)Z"\|start="(\d{14})\s\+\d{4}"||}
index_stop.scrub {regex||"end_time":"(.*?)Z"\|stop="(\d{14})\s\+\d{4}"||}
index_title.scrub {regex||"title":"(.*?)"\}\|<title[^>]*>(.*?)</title>||}
index_subtitle.scrub {regex||"episode_title":"(.*?)",\|<sub-title[^>]*>(.*?)</sub-title>||}
index_description.scrub {regex||"synopsis":"(.*?)","\|<desc[^>]*>(.*?)</desc>||}
index_category.scrub {regex||"genre":"(.*?)",\|<category[^>]*>(.*?)</category>||}
index_actor.scrub {single(separator=";")|"guest":"||",|",}
index_presenter.scrub {single(separator=";")|"host":"||",|",}
index_rating.scrub {regex||"tv_rating":"(.*?)",\|<rating[^>]*>[^<]*<value>(.*?)</value>||}
index_episode.scrub {regex(pattern="S'S1'E'E1'""E'E1'")||"episode_number":"([1-9]\d*)(?:\.\d*)?"\|<episode-num system="onscreen">([1-9]\d*)</episode-num>||}
index_temp_1.scrub {regex||"season_number":"([1-9]\d*)(?:\.\d*)?"||}
index_temp_2.scrub {single(separator="." include=first)|<episode-num system="xmltv_ns">||</episode-num>|</episode-num>}
*
index_start.modify {replace(type=regex)|"^\d{4}(.*?)\d{10}$"|-}
index_start.modify {replace(type=regex)|"^\d{4}-\d{2}(.*?)\d{8}$"|-}
index_start.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}(.*?)\d{6}$"|T}
index_start.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}T\d{2}(.*?)\d{4}$"|:}
index_start.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}(.*?)\d{2}$"|:}
*
index_stop.modify {replace(type=regex)|"^\d{4}(.*?)\d{10}$"|-}
index_stop.modify {replace(type=regex)|"^\d{4}-\d{2}(.*?)\d{8}$"|-}
index_stop.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}(.*?)\d{6}$"|T}
index_stop.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}T\d{2}(.*?)\d{4}$"|:}
index_stop.modify {replace(type=regex)|"^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}(.*?)\d{2}$"|:}
*
index_category.modify {replace|;|\|}
index_category.modify {cleanup(style=name)}
index_temp_2.modify {calculate(not "" format=F0)|1 +}
index_episode.modify {addstart(not "")|E}
index_episode.modify {addstart('index_temp_1' not "")|S'index_temp_1'}
index_episode.modify {addstart('index_temp_2' not "")|S'index_temp_2'}
index_showicon.modify {addstart|'index_urlchannellogo'}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index.headers {method=GET}
*index_site_id.scrub {multi|"playlist":[|"mediaid":"|",|],"feed_instance_id"}
*index_site_channel.scrub {multi|"playlist":[|"title":"|",|],"feed_instance_id"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_id")}
** @auto_xml_channel_end
