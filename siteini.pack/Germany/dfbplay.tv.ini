**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: dfbplay.tv
* @MinSWversion: V5.3.0.7
* @Revision 0 - [26/01/2024] Blackbear199
*  - creation
* @Remarks: set timezone on site {xxx} line to timezone of pc running webgrab
* @header_end
**------------------------------------------------------------------------------------------------
site {url=dfbplay.tv|timezone=America/Halifax|maxdays=7.1|cultureinfo=de-DE|charset=UTF-8|nopageoverlaps|titlematchfactor=90}
site {episodesystem=onscreen}
*
scope.range {(urlindex)|end}
url_index{url|https://api.app.dfbplay.tv/v1/EpgTile/FilterProgramTiles?$headers=%7B%22Content-Type%22:%22application%2Fjson%3Bcharset%3Dutf-8%22,%22X-Api-Date-Format%22:%22iso%22,%22X-Api-Camel-Case%22:true%7D}
url_index.headers {method=POST_BACK(POST,POST)}
url_index.headers {contenttype=application/json; charset=utf-8}
url_index.headers {referer=https://www.dfbplay.tv/}
url_index.headers {postdata={"platformCodename":"www","from":"'global_temp_6'.000Z","to":"'global_temp_5'.000Z","orChannelCodenames":["dfbplay-fastchannel"]}|={"platformCodename":"www","requestedTiles":['global_temp_1']}}
url_index.headers {customheader=Origin=https://www.dfbplay.tv}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
global_temp_1.scrub {multi|"id": "||"|"}
global_temp_9.modify {calculate(format=date,zzz)|'now'}
global_temp_8.modify {substring(type=char)|'global_temp_9' 0 1}
global_temp_9.modify {remove(type=char)|0 1}
global_temp_7.modify {calculate(format=F0)|'config_timespan_days' 1 +}
global_temp_6.modify {calculate('global_temp_8' "-" format=date,yyyy-MM-ddTHH:mm:ss)|'urldate_formatted' 0:'global_temp_9' +}
global_temp_6.modify {calculate('global_temp_8' "+" format=date,yyyy-MM-ddTHH:mm:ss)|'urldate_formatted' 0:'global_temp_9' -}
global_temp_5.modify {calculate(format=date,yyyy-MM-ddTHH:mm:ss)|'global_temp_6' 'global_temp_7':0:0 +}
end_scope
*
scope.range {(postback)|end}
global_temp_1.modify {addstart|{"id":"}
global_temp_1.modify {addend|"}}
global_temp_1.modify {replace|\||,}
url_index.modify {set|https://api.app.dfbplay.tv/v2/Tile/GetTiles?$headers=%7B%22Content-Type%22:%22application%2Fjson%3Bcharset%3Dutf-8%22,%22X-Api-Date-Format%22:%22iso%22,%22X-Api-Camel-Case%22:true%7D}
end_scope
*
urldate.format {datestring|yyyy-MM-dd}
*
index_urlchannellogo.modify {set|https://www.dfbplay.tv/images/app-logo-contrast.svg}
*
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlshow {url()||{"type":"maxdome","url":"||"}]},}
index_urlshow.modify {cleanup(style=jsondecode)}
*
scope.range {(splitindex)|end}
index_showsplit.scrub {regex||"tiles":\s*\[(.*?)\],[^"]*"result"||}
index_showsplit.modify {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify {replace(type=regex)|"\}(,[^\{]*)\{[^\"]*\"\$type\""|\|}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"start": "||"|"}
index_stop.scrub {single|"stop": "||"|"}
index_title.scrub {regex||"title":\s*"([^"]*)",[^"]*"description"||}
index_description.scrub {single|"description": "||",|",}
index_showicon.scrub {single|"images": [|"url": "|"|]}
*
index_category.modify {set|Sports}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {|}
*index_site_id.modify {set|dfb-play}
*index_site_channel.modify {set|DFB Play}
** @auto_xml_channel_end
