**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvguide.com
* @MinSWversion: V5.0
* @Revision 30 - [18/12/2024] Blackbear199
*  - add timezone to channel creation
* @Revision 29 - [17/12/2024] Blackbear199
*  - more site changes
*  - channel creation fix for null channel number
* @Revision 28 - [04/12/2024] Blackbear199
*  - url index duration changed to static value
*  - add delays
* @Revision 27 - [08/11/2024] Blackbear199
*  - url change
* @Revision 26 - [09/03/2024] Blackbear199
*  -  add repeat(previously shown),premiere
* @Revision 25 - [14/02/2024] Blackbear199
*  - url changes
* @Revision 24 - [20/03/2023] Blackbear199
*  - duplicate showsplit fix
* @Revision 23 - [20/03/2023] Blackbear199
*  - change to single channel page
* @Revision 22 - [15/03/2023] Blackbear199
*  - url changes
* @Revision 21 - [27/02/2023] Blackbear199
*  - subdetail page fix
* @Revision 20 - [03/02/2023] Blackbear199
*  - add starrating
* @Remarks: 1. Create country file
*              <update>c1-country</update>
*              <channel update="i" site="tvguide.com" site_id="" xmltv_id="dummy">dummy</channel>
*           2. Create a provider list for a country from above step,example Aruba
*              <update>c2-Aruba</update>
*              <channel update="i" site="tvguide.com" site_id="ABW" xmltv_id="Aruba">Aruba</channel>
*           3. For USA only, create a provider list by zipcode
*              Skip step 1 and 2 above,set the site_id="xxxxx" to desired zipcode,example 10001
*              <update>c3-10001</update>
*              <channel update="i" site="tvguide.com" site_id="10001" xmltv_id="dummy">dummy</channel>
*           4. For USA only, create a provider list by timezone
*              Skip step 1 and 2 above.
*              <update>c4-timezone</update>
*              <channel update="i" site="tvguide.com" site_id="" xmltv_id="dummy">dummy</channel>
*           5. Create a channel list for a provider from above steps,example zipcode 10001 dish network
*              <update>c5-10001-dish</update>
*              <channel update="i" site="tvguide.com" site_id="9100008443" xmltv_id="Dish Network New York">Dish Network New York</channel>
*              <channel update="i" site="tvguide.com" site_id="9100001138" xmltv_id="DTV San Juan">DTV San Juan</channel>
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvguide.com|timezone=UTC|maxdays=14.1|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
site {ratingsystem=MPAA|episodesystem=onscreen|retry=<retry channel-delay="0" index-delay="1" show-delay="1" time-out="30">4</retry>}
*
url_index                   {url|https://backend.tvguide.com/tvschedules/tvguide/##SourceId##/web?start=|urldate|&duration=20160&channelSourceIds=##channel##&apiKey=DI9elXhZ3bU6ujsA2gXEKOANyncXGUGc}
url_index.headers           {referer=https://www.tvguide.com/}
url_index.headers           {customheader=Origin=https://www.tvguide.com}
url_index.headers           {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format              {datenumber|unix}
*
scope.range                 {(urlindex)|end}
global_temp_1.modify        {substring(type=regex)|'config_site_id' "^(\d+)"}
global_temp_2.modify        {substring(type=regex)|'config_site_id' "(\d+)$"}
url_index.modify            {replace|##SourceId##|'global_temp_1'}
url_index.modify            {replace|##channel##|'global_temp_2'}
end_scope
*
scope.range                 {(splitindex)|end}
index_showsplit.scrub       {regex||^.*?"programSchedules":\s*\[(?:.*?)(?:(\{[^\}]*\})(?:.*?))*\]||}
index_showsplit.modify      {remove(type=regex)|"\{[^\}]*\"title\":\s*null,[^\}]*\}"}
index_showsplit.modify      {cleanup(style=jsondecode)}
*index_showsplit.modify     {(debug)}
end_scope
*
index_start.scrub           {regex||"startTime":\s*(\d+)||}
index_stop.scrub            {regex||"endTime":\s*(\d+)||}
index_title.scrub           {single|"title":"||",|",}
index_temp_4.scrub          {regex||"airingAttrib"\s*:\s*(\d*)||}	* binairy: 1= Live, 2=??,4=New, 8=??
*
* add flags according to airing attributes
index_temp_5.modify         {calculate(format=D0)|'index_temp_4' 1 and}
index_temp_6.modify         {addend('index_temp_5'=="1")| (Live)}
index_temp_5.modify         {calculate(format=D0)|'index_temp_4' 2 and}
index_temp_6.modify         {addend('index_temp_5'=="2")| (Repeat)}
index_temp_5.modify         {calculate(format=D0)|'index_temp_4' 4 and}
index_temp_6.modify         {addend('index_temp_5'=="4")| (New)}
* next line adds * to new shows, Title * = new shows, Title = "not new"
*index_title.modify          {addend('index_temp_5'=="4")| *}
index_temp_5.modify         {calculate(format=D0)|'index_temp_4' 8 and}
index_temp_6.modify         {addend('index_temp_5'=="8")| (CC)}
index_premiere.modify       {set(['index_temp_6' ~ "New"] ['index_temp_6' ~ "Live"] \|)|true}
index_previousshown.modify  {set('index_temp_6' ~ "Repeat")|true}
*
index_urlshow               {url||"programDetails":"||"|"}
index_urlshow.modify        {addend(not "")|?apiKey=DI9elXhZ3bU6ujsA2gXEKOANyncXGUGc}
index_urlshow.headers       {referer=https://www.tvguide.com/}
index_urlshow.headers       {customheader=Origin=https://www.tvguide.com}
index_urlshow.headers       {customheader=Accept-Encoding=gzip,deflate,br}
*
subtitle.scrub              {single|"episodeTitle":"||",|",}
description.scrub           {single|"description":"||","|","}
category.scrub              {multi|"genres":["||"]|"]}
productiondate.scrub        {regex||"releaseYear":\s*(\d{4})||}
rating.scrub                {single|"tvRating":"||"|"}
starrating.scrub            {single(exclude="0")|"metacriticSummary":{|"score":|,|}}
episode.scrub               {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||^.*?"episodeNumber":\s*([1-9]\d*)||}
showicon.scrub              {single|"imageUrl":"||"|"}
temp_1.scrub                {regex||^.*?"seasonNumber":\s*([1-9]\d*)||}
temp_2.scrub                {single(exclude="null")|"mcoId":||,|,}
temp_3.scrub                {single(exclude="null")|"type":"||"|"}
temp_4.scrub                {single(exclude="null")|"slug":"||"|"}
*
title.modify                {addstart|'index_title'}
description.modify          {cleanup(style=jsondecode)}
description.modify          {addend|'index_temp_6'}
category.modify             {substring(type=regex)|"\"name\":\s*\"(.*?)\","}
category.modify             {remove|Other}
if                          {('starrating' not "")|end}
starrating.modify           {calculate(format=F1|10 /}
starrating.modify           {addend|/10}
starrating.modify           {addend|(system=Metacritic)}
end_if
temp_1.modify               {clear(> "1000")}
episode.modify              {addstart(not "")|E}
episode.modify              {addstart('temp_1' not "")|S'temp_1' }
temp_3.modify               {set("show")|tvshows}
temp_3.modify               {set("movie")|movies}
*
*
urlsubdetail.modify         {addend(['temp_2' not ""] ['temp_3' not ""] & ['temp_4' not ""] &)|https://www.tvguide.com/'temp_3'/'temp_4'/cast/'temp_2'/}
urlsubdetail.headers        {customheader=Accept-Encoding=gzip,deflate,br}
*
subdetail_director.scrub    {multi|"director":[|"name":"|",|]}
subdetail_actor.scrub       {multi|"actor":[||]|]}
subdetail_producer.scrub    {multi|"producer":[|"name":"|",|]}
subdetail_commentator.scrub {multi|"commentator":[|"name":"|",|]}
subdetail_presenter.scrub   {multi|"host":[|"name":"|",|]}
subdetail_composer.scrub    {multi|"composer":[|"name":"|",|]}
subdetail_writer.scrub      {multi|"writer":[|"name":"|",|]}
*
subdetail_actor.modify      {replace|\},\{|\}\|\{}
loop                        {(each "subdetail_temp_9" in 'subdetail_actor')|end}
subdetail_temp_8.modify     {substring(type=regex)|'subdetail_temp_9' "\"name\":\"(.*?)\",\""}
subdetail_temp_7.modify     {substring(type=regex)|'subdetail_temp_9' "\"characterName\":\"(.*?)\"\}"}
subdetail_temp_8.modify     {addend('subdetail_temp_7' not "")|(role='subdetail_temp_7')}
subdetail_temp_6.modify     {addend('subdetail_temp_8' not "")|'subdetail_temp_8'####}
end_loop
subdetail_actor.modify      {substring(type=regex)|'subdetail_temp_6' "(.*?)####"}
subdetail_actor.modify      {cleanup(style=jsondecode)}
***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  COUNTRY FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://backend.tvguide.com/tvschedules/tvguide/providercountries/web?apiKey=DI9elXhZ3bU6ujsA2gXEKOANyncXGUGc}
*subpage.format          {list|null}
*index_site_id.scrub     {multi(exclude="USA")|"items":[|country/|/web|]}
*index_site_channel.scrub{multi(exclude="United States of America")|"items":[|"name":"|",|]}
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  PROVIDER FILE CREATION BY COUNTRY(only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://backend.tvguide.com/tvschedules/tvguide/serviceproviders/country/|channel|/web?apiKey=DI9elXhZ3bU6ujsA2gXEKOANyncXGUGc}
*subpage.format          {list|null}
*index_site_id.scrub     {multi|"id":||,|,}
*index_site_channel.scrub{multi|"name":"||",|",}
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  PROVIDER FILE CREATION BY ZIPCODE USA ONLY (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://backend.tvguide.com/tvschedules/tvguide/serviceproviders/zipcode/|channel|/web?apiKey=DI9elXhZ3bU6ujsA2gXEKOANyncXGUGc}
*subpage.format          {list|null}
*index_site_id.scrub     {multi|"id":||,|,}
*index_site_channel.scrub{multi|"name":"||",|",}
*index_site_id.modify    {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION BY TIMEZONE (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index                {url|https://www.tvguide.com/a/neutron/f163fa7.modern.js}
*subpage.format           {list|null}
*index_site_id.scrub      {multi|providerOffsets:[|id:|,|]}
*index_site_channel.scrub {multi|providerOffsets:[|name:"|"|]}
*index_site_id.modify     {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end

***  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION BY PROVIDER (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index                {url|https://backend.tvguide.com/tvschedules/tvguide/serviceprovider/|channel|/sources/web?apiKey=DI9elXhZ3bU6ujsA2gXEKOANyncXGUGc}
*subpage.format           {list|null}
*index_site_id.scrub      {multi|"sourceId":||,|,}
*index_site_channel.scrub {regex||"fullName":\s*"([^"]*",\s*"name":\s*"[^"]*",\s*"number":[^,]*)||}
*index_site_id.modify     {addstart|'config_site_id'##}
*index_site_channel.modify{replace(type=regex)|"\",\s*\"name\":\s*\""| (}
*index_site_channel.modify{replace(type=regex)|"\",\s*\"number\":\s*\"?"|) [}
*index_site_channel.modify{addend|]}
*index_site_channel.modify {remove|"}
*index_site_channel.modify {remove| [null]}
*index_site_id.modify     {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
